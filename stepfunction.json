{
    "Comment": "A description of my state machine",
    "StartAt": "Read_Image_data",
    "States": {
      "Read_Image_data": {
        "Type": "Task",
        "Resource": "arn:aws:states:::lambda:invoke",
        "Output": "{% $states.result.Payload %}",
        "Arguments": {
          "FunctionName": "arn:aws:lambda:us-east-1:180294186156:function:serializeImageData:$LATEST",
          "Payload": "{% $states.input %}"
        },
        "Retry": [
          {
            "ErrorEquals": [
              "Lambda.ServiceException",
              "Lambda.AWSLambdaException",
              "Lambda.SdkClientException",
              "Lambda.TooManyRequestsException"
            ],
            "IntervalSeconds": 1,
            "MaxAttempts": 3,
            "BackoffRate": 2,
            "JitterStrategy": "FULL"
          }
        ],
        "Next": "Classify_image"
      },
      "Classify_image": {
        "Type": "Task",
        "Resource": "arn:aws:states:::lambda:invoke",
        "Output": "{% $states.result.Payload %}",
        "Arguments": {
          "FunctionName": "arn:aws:lambda:us-east-1:180294186156:function:classification:$LATEST",
          "Payload": "{% $states.input %}"
        },
        "Retry": [
          {
            "ErrorEquals": [
              "Lambda.ServiceException",
              "Lambda.AWSLambdaException",
              "Lambda.SdkClientException",
              "Lambda.TooManyRequestsException"
            ],
            "IntervalSeconds": 1,
            "MaxAttempts": 3,
            "BackoffRate": 2,
            "JitterStrategy": "FULL"
          }
        ],
        "Next": "Threshold_Inference"
      },
      "Threshold_Inference": {
        "Type": "Task",
        "Resource": "arn:aws:states:::lambda:invoke",
        "Output": "{% $states.result.Payload %}",
        "Arguments": {
          "FunctionName": "arn:aws:lambda:us-east-1:180294186156:function:image_predthreshold:$LATEST",
          "Payload": "{% $states.input %}"
        },
        "End": true
      }
    },
    "QueryLanguage": "JSONata"
  }